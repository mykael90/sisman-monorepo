model Contract {
    id               Int              @id @default(autoincrement()) //TODO: tentar depois usar o mesmo id do sipac
    providerId       Int
    codigoSipac      String?           @db.VarChar(45)
    value            Decimal?         @db.Decimal(10, 2)
    subject          String?          @db.Text //objeto
    startDate        DateTime?
    maxEndDate       DateTime?
    providers        ContractProvider @relation(fields: [providerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    workersContracts WorkerContract[]
    isActive         Boolean          @default(true) // Indicates if the contract is active.
    // workers_manualfrequencies workers_manualfrequencies[]

    createdAt DateTime @default(now()) @db.Timestamp(0)
    updatedAt DateTime @updatedAt @db.Timestamp(0)

    @@index([providerId])
    @@map("contracts")
}

model ContractProvider {
    id           Int        @id @default(autoincrement()) //TODO: tentar depois usar o mesmo id do sipac
    cnpj         String?    @db.Char(14)
    cpf          String?    @db.Char(20)
    razaoSocial  String?
    nomeFantasia String?
    nome         String?
    contracts    Contract[]

    //compatiblidade sipac
    idInstitucionalFornecedor String? @unique // vem de sipac id-institucional-fornecedor

    createdAt DateTime @default(now()) @db.Timestamp(0)
    updatedAt DateTime @updatedAt @db.Timestamp(0)

    @@map("contract_providers")
}
