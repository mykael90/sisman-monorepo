
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.LogErrorScalarFieldEnum = {
  id: 'id',
  timestamp: 'timestamp',
  statusCode: 'statusCode',
  path: 'path',
  method: 'method',
  message: 'message',
  stackTrace: 'stackTrace',
  ipAddress: 'ipAddress',
  userId: 'userId',
  requestBody: 'requestBody'
};

exports.Prisma.LogLoginScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  timestamp: 'timestamp',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  successful: 'successful'
};

exports.Prisma.MaintenanceRequestScalarFieldEnum = {
  id: 'id',
  protocolNumber: 'protocolNumber',
  title: 'title',
  description: 'description',
  priority: 'priority',
  requestedAt: 'requestedAt',
  deadline: 'deadline',
  solutionDetails: 'solutionDetails',
  completedAt: 'completedAt',
  currentMaintenanceInstanceId: 'currentMaintenanceInstanceId',
  createdById: 'createdById',
  assignedToId: 'assignedToId',
  equipmentId: 'equipmentId',
  serviceTypeId: 'serviceTypeId',
  statusId: 'statusId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaintenanceRequestStatusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isFinal: 'isFinal',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaintenanceTimelineEventScalarFieldEnum = {
  id: 'id',
  type: 'type',
  description: 'description',
  eventData: 'eventData',
  occurredAt: 'occurredAt',
  maintenanceRequestId: 'maintenanceRequestId',
  actionById: 'actionById',
  transferredFromInstanceId: 'transferredFromInstanceId',
  transferredToInstanceId: 'transferredToInstanceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaintenanceInstanceScalarFieldEnum = {
  id: 'id',
  sipacId: 'sipacId',
  name: 'name',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacServiceTypeManutencaoScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EquipmentScalarFieldEnum = {
  id: 'id',
  patrimonyTag: 'patrimonyTag',
  name: 'name',
  description: 'description',
  location: 'location',
  serialNumber: 'serialNumber',
  manufacturer: 'manufacturer',
  model: 'model',
  acquisitionDate: 'acquisitionDate',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InfrastructureOccurrenceScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  locationDescription: 'locationDescription',
  reportedAt: 'reportedAt',
  status: 'status',
  resolutionNotes: 'resolutionNotes',
  reportedById: 'reportedById',
  maintenanceRequestId: 'maintenanceRequestId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WarehouseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  code: 'code',
  location: 'location',
  isActive: 'isActive',
  maintenanceInstanceId: 'maintenanceInstanceId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialGlobalCatalogScalarFieldEnum = {
  id: 'id',
  sipacCode: 'sipacCode',
  catmatCode: 'catmatCode',
  name: 'name',
  description: 'description',
  unitOfMeasure: 'unitOfMeasure',
  categoryId: 'categoryId',
  photoUrl: 'photoUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialWarehouseStockScalarFieldEnum = {
  id: 'id',
  warehouseId: 'warehouseId',
  materialId: 'materialId',
  physicalOnHandQuantity: 'physicalOnHandQuantity',
  initialStockQuantity: 'initialStockQuantity',
  restrictedQuantity: 'restrictedQuantity',
  reservedQuantity: 'reservedQuantity',
  locationInWarehouse: 'locationInWarehouse',
  minStockLevel: 'minStockLevel',
  maxStockLevel: 'maxStockLevel',
  lastStockCountDate: 'lastStockCountDate',
  averageCost: 'averageCost',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialRequestScalarFieldEnum = {
  id: 'id',
  protocolNumber: 'protocolNumber',
  requestType: 'requestType',
  justification: 'justification',
  requestDate: 'requestDate',
  status: 'status',
  maintenanceRequestId: 'maintenanceRequestId',
  requestedById: 'requestedById',
  approvedById: 'approvedById',
  approvalDate: 'approvalDate',
  approvalNotes: 'approvalNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialRequestItemScalarFieldEnum = {
  id: 'id',
  materialRequestId: 'materialRequestId',
  requestType: 'requestType',
  requestedGlobalMaterialId: 'requestedGlobalMaterialId',
  fulfilledByInstanceId: 'fulfilledByInstanceId',
  quantityRequested: 'quantityRequested',
  quantityApproved: 'quantityApproved',
  quantityDelivered: 'quantityDelivered',
  unitOfMeasure: 'unitOfMeasure',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialStockMovementTypeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  operation: 'operation',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialStockMovementScalarFieldEnum = {
  id: 'id',
  warehouseId: 'warehouseId',
  globalMaterialId: 'globalMaterialId',
  materialInstanceId: 'materialInstanceId',
  movementTypeId: 'movementTypeId',
  quantity: 'quantity',
  unitOfMeasure: 'unitOfMeasure',
  movementDate: 'movementDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  processedByUserId: 'processedByUserId',
  collectedByUserId: 'collectedByUserId',
  warehouseMaterialStockId: 'warehouseMaterialStockId',
  materialRequestItemId: 'materialRequestItemId',
  maintenanceRequestId: 'maintenanceRequestId',
  materialWithdrawalItemId: 'materialWithdrawalItemId',
  materialReceiptItemId: 'materialReceiptItemId',
  stockTransferOrderItemId: 'stockTransferOrderItemId'
};

exports.Prisma.MaterialDerivedConditionScalarFieldEnum = {
  id: 'id',
  code: 'code',
  name: 'name',
  description: 'description',
  isUsable: 'isUsable',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialDerivedScalarFieldEnum = {
  id: 'id',
  derivedIdentifier: 'derivedIdentifier',
  globalMaterialId: 'globalMaterialId',
  derivedName: 'derivedName',
  derivedDescription: 'derivedDescription',
  derivedUnitOfMeasure: 'derivedUnitOfMeasure',
  warehouseId: 'warehouseId',
  conditionId: 'conditionId',
  quantity: 'quantity',
  locationInWarehouse: 'locationInWarehouse',
  sourceNotes: 'sourceNotes',
  reservedQuantity: 'reservedQuantity',
  restrictedQuantity: 'restrictedQuantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialPickingOrderScalarFieldEnum = {
  id: 'id',
  pickingOrderNumber: 'pickingOrderNumber',
  materialRequestId: 'materialRequestId',
  warehouseId: 'warehouseId',
  requestedByUserId: 'requestedByUserId',
  requestedAt: 'requestedAt',
  beCollectedByUserId: 'beCollectedByUserId',
  beCollectedByWorkerId: 'beCollectedByWorkerId',
  desiredPickupDate: 'desiredPickupDate',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  materialRequestItemId: 'materialRequestItemId'
};

exports.Prisma.MaterialPickingOrderItemScalarFieldEnum = {
  id: 'id',
  materialPickingOrderId: 'materialPickingOrderId',
  materialRequestItemId: 'materialRequestItemId',
  quantityToPick: 'quantityToPick',
  unitOfMeasure: 'unitOfMeasure',
  quantityPicked: 'quantityPicked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialWithdrawalScalarFieldEnum = {
  id: 'id',
  withdrawalNumber: 'withdrawalNumber',
  warehouseId: 'warehouseId',
  processedByUserId: 'processedByUserId',
  collectedByUserId: 'collectedByUserId',
  collectedByWorkerId: 'collectedByWorkerId',
  withdrawalDate: 'withdrawalDate',
  maintenanceRequestId: 'maintenanceRequestId',
  materialRequestId: 'materialRequestId',
  materialPickingOrderId: 'materialPickingOrderId',
  movementTypeId: 'movementTypeId',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialWithdrawalItemScalarFieldEnum = {
  id: 'id',
  materialWithdrawalId: 'materialWithdrawalId',
  globalMaterialId: 'globalMaterialId',
  materialInstanceId: 'materialInstanceId',
  quantityWithdrawn: 'quantityWithdrawn',
  unitOfMeasure: 'unitOfMeasure',
  materialRequestItemId: 'materialRequestItemId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialTransferOrderScalarFieldEnum = {
  id: 'id',
  transferOrderNumber: 'transferOrderNumber',
  originWarehouseId: 'originWarehouseId',
  destinationWarehouseId: 'destinationWarehouseId',
  status: 'status',
  requestedByUserId: 'requestedByUserId',
  requestedAt: 'requestedAt',
  approvedByUserId: 'approvedByUserId',
  approvedAt: 'approvedAt',
  shippedByUserId: 'shippedByUserId',
  shippedAt: 'shippedAt',
  receivedByUserId: 'receivedByUserId',
  receivedAt: 'receivedAt',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialTransferOrderItemScalarFieldEnum = {
  id: 'id',
  materialTransferOrderId: 'materialTransferOrderId',
  materialId: 'materialId',
  materialInstanceId: 'materialInstanceId',
  quantityRequested: 'quantityRequested',
  unitOfMeasure: 'unitOfMeasure',
  quantityShipped: 'quantityShipped',
  quantityReceived: 'quantityReceived',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialReceiptScalarFieldEnum = {
  id: 'id',
  receiptNumber: 'receiptNumber',
  externalReference: 'externalReference',
  receiptDate: 'receiptDate',
  movementTypeId: 'movementTypeId',
  sourceName: 'sourceName',
  destinationWarehouseId: 'destinationWarehouseId',
  processedByUserId: 'processedByUserId',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialReceiptItemScalarFieldEnum = {
  id: 'id',
  materialReceiptId: 'materialReceiptId',
  materialId: 'materialId',
  quantityExpected: 'quantityExpected',
  unitOfMeasure: 'unitOfMeasure',
  quantityReceived: 'quantityReceived',
  quantityAccepted: 'quantityAccepted',
  quantityRejected: 'quantityRejected',
  rejectionReason: 'rejectionReason',
  batchNumber: 'batchNumber',
  expirationDate: 'expirationDate',
  unitPrice: 'unitPrice',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialRestrictionOrderScalarFieldEnum = {
  id: 'id',
  restrictionOrderNumber: 'restrictionOrderNumber',
  warehouseId: 'warehouseId',
  operationType: 'operationType',
  processedByUserId: 'processedByUserId',
  processedAt: 'processedAt',
  targetMaterialRequestId: 'targetMaterialRequestId',
  status: 'status',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MaterialRestrictionOrderItemScalarFieldEnum = {
  id: 'id',
  materialRestrictionOrderId: 'materialRestrictionOrderId',
  globalMaterialId: 'globalMaterialId',
  materialInstanceId: 'materialInstanceId',
  quantity: 'quantity',
  unitOfMeasure: 'unitOfMeasure',
  targetMaterialRequestItemId: 'targetMaterialRequestItemId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacMaterialScalarFieldEnum = {
  idMaterial: 'idMaterial',
  ativo: 'ativo',
  codigo: 'codigo',
  codigoSidec: 'codigoSidec',
  consumoEnergia: 'consumoEnergia',
  dataUltimaCompra: 'dataUltimaCompra',
  denominacaoGrupo: 'denominacaoGrupo',
  denominacaoMaterial: 'denominacaoMaterial',
  denominacaoMaterialAscii: 'denominacaoMaterialAscii',
  denominacaoSubGrupo: 'denominacaoSubGrupo',
  denominacaoUnidade: 'denominacaoUnidade',
  especificacao: 'especificacao',
  especificacaoAscii: 'especificacaoAscii',
  idGrupo: 'idGrupo',
  idSubGrupo: 'idSubGrupo',
  precoCompra: 'precoCompra',
  valorEstimado: 'valorEstimado',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacGrupoMaterialScalarFieldEnum = {
  idGrupoMaterial: 'idGrupoMaterial',
  ativo: 'ativo',
  codigo: 'codigo',
  denominacao: 'denominacao',
  descricao: 'descricao',
  idElementoDespesa: 'idElementoDespesa',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacSubGrupoMaterialScalarFieldEnum = {
  idSubGrupoMaterial: 'idSubGrupoMaterial',
  codigo: 'codigo',
  denominacao: 'denominacao',
  idGrupoMaterial: 'idGrupoMaterial',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacRequisicaoMaterialScalarFieldEnum = {
  id: 'id',
  numeroDaRequisicao: 'numeroDaRequisicao',
  tipoDaRequisicao: 'tipoDaRequisicao',
  tipoId: 'tipoId',
  convenio: 'convenio',
  grupoDeMaterial: 'grupoDeMaterial',
  grupoMaterialId: 'grupoMaterialId',
  unidadeDeCusto: 'unidadeDeCusto',
  unidadeRequisitante: 'unidadeRequisitante',
  destinoDaRequisicao: 'destinoDaRequisicao',
  usuarioLogin: 'usuarioLogin',
  usuarioId: 'usuarioId',
  dataDeCadastro: 'dataDeCadastro',
  dataDeEnvio: 'dataDeEnvio',
  valorDaRequisicao: 'valorDaRequisicao',
  valorDoTotalAtendido: 'valorDoTotalAtendido',
  opcaoOrcamentaria: 'opcaoOrcamentaria',
  numeroDaRequisicaoRelacionada: 'numeroDaRequisicaoRelacionada',
  local: 'local',
  observacoes: 'observacoes',
  statusAtual: 'statusAtual',
  almoxarifado: 'almoxarifado',
  almoxarifadoId: 'almoxarifadoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sipacRequisicaoManutencaoId: 'sipacRequisicaoManutencaoId'
};

exports.Prisma.SipacItemRequisicaoMaterialScalarFieldEnum = {
  id: 'id',
  numeroItem: 'numeroItem',
  codigo: 'codigo',
  quantidade: 'quantidade',
  valor: 'valor',
  total: 'total',
  quantidadeAtendida: 'quantidadeAtendida',
  quantidadeDevolvida: 'quantidadeDevolvida',
  quantidadeEmCompra: 'quantidadeEmCompra',
  valorAtendimento: 'valorAtendimento',
  totalAtendimento: 'totalAtendimento',
  status: 'status',
  requisicaoId: 'requisicaoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacHistoricoRequisicaoMaterialScalarFieldEnum = {
  id: 'id',
  dataHora: 'dataHora',
  status: 'status',
  usuario: 'usuario',
  observacoes: 'observacoes',
  requisicaoId: 'requisicaoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacTotalizacaoElementoDespesaMaterialScalarFieldEnum = {
  id: 'id',
  grupoDeMaterial: 'grupoDeMaterial',
  total: 'total',
  requisicaoId: 'requisicaoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacDetalheAquisicaoItemMaterialScalarFieldEnum = {
  id: 'id',
  compras: 'compras',
  empenhos: 'empenhos',
  notasFiscais: 'notasFiscais',
  processosDePagamento: 'processosDePagamento',
  requisicaoId: 'requisicaoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SipacRequisicaoManutencaoScalarFieldEnum = {
  id: 'id',
  numeroRequisicao: 'numeroRequisicao',
  categoriaRequisicao: 'categoriaRequisicao',
  idCategoria: 'idCategoria',
  tipoDaRequisicao: 'tipoDaRequisicao',
  idTipo: 'idTipo',
  divisao: 'divisao',
  usuarioGravacao: 'usuarioGravacao',
  idUsuarioGravacao: 'idUsuarioGravacao',
  status: 'status',
  dataDeCadastro: 'dataDeCadastro',
  unidadeRequisitante: 'unidadeRequisitante',
  unidadeDeCusto: 'unidadeDeCusto',
  descricao: 'descricao',
  local: 'local',
  representanteDaUnidadeDeOrigem: 'representanteDaUnidadeDeOrigem',
  telefonesDoRepresentante: 'telefonesDoRepresentante',
  ramal: 'ramal',
  email: 'email',
  horarioParaAtendimento: 'horarioParaAtendimento',
  observacao: 'observacao',
  justificativa: 'justificativa',
  valorRequisicao: 'valorRequisicao',
  valorAutorizacao: 'valorAutorizacao',
  dataAutorizacaoResponsavel: 'dataAutorizacaoResponsavel',
  dataFinalizacao: 'dataFinalizacao',
  emailRepresentante: 'emailRepresentante',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  requisicaoManutencaoIdMae: 'requisicaoManutencaoIdMae'
};

exports.Prisma.SipacInformacaoServicoManutencaoScalarFieldEnum = {
  id: 'id',
  diagnostico: 'diagnostico',
  executante: 'executante',
  dataDeCadastro: 'dataDeCadastro',
  tecnicoResponsavel: 'tecnicoResponsavel',
  requisicaoManutencaoId: 'requisicaoManutencaoId'
};

exports.Prisma.SipacHistoricoManutencaoScalarFieldEnum = {
  id: 'id',
  data: 'data',
  status: 'status',
  usuario: 'usuario',
  ramal: 'ramal',
  observacoes: 'observacoes',
  requisicaoManutencaoId: 'requisicaoManutencaoId'
};

exports.Prisma.SipacImovelScalarFieldEnum = {
  rip: 'rip',
  nomeImovel: 'nomeImovel',
  latitude: 'latitude',
  longitude: 'longitude',
  tipoVocacao: 'tipoVocacao',
  tipoFormaAquisicao: 'tipoFormaAquisicao',
  tipoImovel: 'tipoImovel'
};

exports.Prisma.SipacImovelEnderecoScalarFieldEnum = {
  id: 'id',
  municipio: 'municipio',
  bairro: 'bairro',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  cep: 'cep',
  ripImovel: 'ripImovel'
};

exports.Prisma.SipacCampusScalarFieldEnum = {
  id: 'id',
  nomeCampus: 'nomeCampus',
  ripImovel: 'ripImovel'
};

exports.Prisma.SipacPredioScalarFieldEnum = {
  subRip: 'subRip',
  denominacaoPredio: 'denominacaoPredio',
  idZona: 'idZona',
  ripImovel: 'ripImovel',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  login: 'login',
  email: 'email',
  image: 'image',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MagicLinkScalarFieldEnum = {
  id: 'id',
  code: 'code',
  userId: 'userId',
  expiresAt: 'expiresAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  role: 'role',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkerScalarFieldEnum = {
  id: 'id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.LogErrorOrderByRelevanceFieldEnum = {
  id: 'id',
  path: 'path',
  method: 'method',
  message: 'message',
  stackTrace: 'stackTrace',
  ipAddress: 'ipAddress',
  requestBody: 'requestBody'
};

exports.Prisma.LogLoginOrderByRelevanceFieldEnum = {
  id: 'id',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent'
};

exports.Prisma.MaintenanceRequestOrderByRelevanceFieldEnum = {
  protocolNumber: 'protocolNumber',
  title: 'title',
  description: 'description',
  solutionDetails: 'solutionDetails'
};

exports.Prisma.MaintenanceRequestStatusOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.MaintenanceTimelineEventOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.MaintenanceInstanceOrderByRelevanceFieldEnum = {
  sipacId: 'sipacId',
  name: 'name'
};

exports.Prisma.SipacServiceTypeManutencaoOrderByRelevanceFieldEnum = {
  name: 'name',
  description: 'description'
};

exports.Prisma.EquipmentOrderByRelevanceFieldEnum = {
  patrimonyTag: 'patrimonyTag',
  name: 'name',
  description: 'description',
  location: 'location',
  serialNumber: 'serialNumber',
  manufacturer: 'manufacturer',
  model: 'model'
};

exports.Prisma.InfrastructureOccurrenceOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description',
  locationDescription: 'locationDescription',
  resolutionNotes: 'resolutionNotes'
};

exports.Prisma.WarehouseOrderByRelevanceFieldEnum = {
  name: 'name',
  code: 'code',
  location: 'location'
};

exports.Prisma.MaterialGlobalCatalogOrderByRelevanceFieldEnum = {
  sipacCode: 'sipacCode',
  catmatCode: 'catmatCode',
  name: 'name',
  description: 'description',
  unitOfMeasure: 'unitOfMeasure',
  photoUrl: 'photoUrl'
};

exports.Prisma.MaterialWarehouseStockOrderByRelevanceFieldEnum = {
  locationInWarehouse: 'locationInWarehouse'
};

exports.Prisma.MaterialRequestOrderByRelevanceFieldEnum = {
  protocolNumber: 'protocolNumber',
  justification: 'justification',
  approvalNotes: 'approvalNotes'
};

exports.Prisma.MaterialRequestItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure',
  notes: 'notes'
};

exports.Prisma.MaterialStockMovementTypeOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description'
};

exports.Prisma.MaterialStockMovementOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure'
};

exports.Prisma.MaterialDerivedConditionOrderByRelevanceFieldEnum = {
  code: 'code',
  name: 'name',
  description: 'description'
};

exports.Prisma.MaterialDerivedOrderByRelevanceFieldEnum = {
  derivedIdentifier: 'derivedIdentifier',
  derivedName: 'derivedName',
  derivedDescription: 'derivedDescription',
  derivedUnitOfMeasure: 'derivedUnitOfMeasure',
  locationInWarehouse: 'locationInWarehouse',
  sourceNotes: 'sourceNotes'
};

exports.Prisma.MaterialPickingOrderOrderByRelevanceFieldEnum = {
  pickingOrderNumber: 'pickingOrderNumber',
  notes: 'notes'
};

exports.Prisma.MaterialPickingOrderItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure'
};

exports.Prisma.MaterialWithdrawalOrderByRelevanceFieldEnum = {
  withdrawalNumber: 'withdrawalNumber',
  notes: 'notes'
};

exports.Prisma.MaterialWithdrawalItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure'
};

exports.Prisma.MaterialTransferOrderOrderByRelevanceFieldEnum = {
  transferOrderNumber: 'transferOrderNumber',
  notes: 'notes'
};

exports.Prisma.MaterialTransferOrderItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure'
};

exports.Prisma.MaterialReceiptOrderByRelevanceFieldEnum = {
  receiptNumber: 'receiptNumber',
  externalReference: 'externalReference',
  sourceName: 'sourceName',
  notes: 'notes'
};

exports.Prisma.MaterialReceiptItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure',
  rejectionReason: 'rejectionReason',
  batchNumber: 'batchNumber'
};

exports.Prisma.MaterialRestrictionOrderOrderByRelevanceFieldEnum = {
  restrictionOrderNumber: 'restrictionOrderNumber',
  notes: 'notes'
};

exports.Prisma.MaterialRestrictionOrderItemOrderByRelevanceFieldEnum = {
  unitOfMeasure: 'unitOfMeasure'
};

exports.Prisma.SipacMaterialOrderByRelevanceFieldEnum = {
  codigo: 'codigo',
  codigoSidec: 'codigoSidec',
  denominacaoGrupo: 'denominacaoGrupo',
  denominacaoMaterial: 'denominacaoMaterial',
  denominacaoMaterialAscii: 'denominacaoMaterialAscii',
  denominacaoSubGrupo: 'denominacaoSubGrupo',
  denominacaoUnidade: 'denominacaoUnidade',
  especificacao: 'especificacao',
  especificacaoAscii: 'especificacaoAscii'
};

exports.Prisma.SipacGrupoMaterialOrderByRelevanceFieldEnum = {
  denominacao: 'denominacao',
  descricao: 'descricao'
};

exports.Prisma.SipacSubGrupoMaterialOrderByRelevanceFieldEnum = {
  denominacao: 'denominacao'
};

exports.Prisma.SipacRequisicaoMaterialOrderByRelevanceFieldEnum = {
  numeroDaRequisicao: 'numeroDaRequisicao',
  tipoDaRequisicao: 'tipoDaRequisicao',
  convenio: 'convenio',
  grupoDeMaterial: 'grupoDeMaterial',
  unidadeDeCusto: 'unidadeDeCusto',
  unidadeRequisitante: 'unidadeRequisitante',
  destinoDaRequisicao: 'destinoDaRequisicao',
  usuarioLogin: 'usuarioLogin',
  opcaoOrcamentaria: 'opcaoOrcamentaria',
  numeroDaRequisicaoRelacionada: 'numeroDaRequisicaoRelacionada',
  local: 'local',
  observacoes: 'observacoes',
  statusAtual: 'statusAtual',
  almoxarifado: 'almoxarifado'
};

exports.Prisma.SipacItemRequisicaoMaterialOrderByRelevanceFieldEnum = {
  codigo: 'codigo',
  status: 'status'
};

exports.Prisma.SipacHistoricoRequisicaoMaterialOrderByRelevanceFieldEnum = {
  status: 'status',
  usuario: 'usuario',
  observacoes: 'observacoes'
};

exports.Prisma.SipacTotalizacaoElementoDespesaMaterialOrderByRelevanceFieldEnum = {
  grupoDeMaterial: 'grupoDeMaterial'
};

exports.Prisma.SipacDetalheAquisicaoItemMaterialOrderByRelevanceFieldEnum = {
  compras: 'compras',
  empenhos: 'empenhos',
  notasFiscais: 'notasFiscais',
  processosDePagamento: 'processosDePagamento'
};

exports.Prisma.SipacRequisicaoManutencaoOrderByRelevanceFieldEnum = {
  numeroRequisicao: 'numeroRequisicao',
  categoriaRequisicao: 'categoriaRequisicao',
  tipoDaRequisicao: 'tipoDaRequisicao',
  divisao: 'divisao',
  usuarioGravacao: 'usuarioGravacao',
  status: 'status',
  unidadeRequisitante: 'unidadeRequisitante',
  unidadeDeCusto: 'unidadeDeCusto',
  descricao: 'descricao',
  local: 'local',
  representanteDaUnidadeDeOrigem: 'representanteDaUnidadeDeOrigem',
  telefonesDoRepresentante: 'telefonesDoRepresentante',
  ramal: 'ramal',
  email: 'email',
  horarioParaAtendimento: 'horarioParaAtendimento',
  observacao: 'observacao',
  justificativa: 'justificativa',
  emailRepresentante: 'emailRepresentante'
};

exports.Prisma.SipacInformacaoServicoManutencaoOrderByRelevanceFieldEnum = {
  diagnostico: 'diagnostico',
  executante: 'executante',
  tecnicoResponsavel: 'tecnicoResponsavel'
};

exports.Prisma.SipacHistoricoManutencaoOrderByRelevanceFieldEnum = {
  status: 'status',
  usuario: 'usuario',
  ramal: 'ramal',
  observacoes: 'observacoes'
};

exports.Prisma.SipacImovelOrderByRelevanceFieldEnum = {
  rip: 'rip',
  nomeImovel: 'nomeImovel',
  tipoVocacao: 'tipoVocacao',
  tipoFormaAquisicao: 'tipoFormaAquisicao',
  tipoImovel: 'tipoImovel'
};

exports.Prisma.SipacImovelEnderecoOrderByRelevanceFieldEnum = {
  municipio: 'municipio',
  bairro: 'bairro',
  logradouro: 'logradouro',
  numero: 'numero',
  complemento: 'complemento',
  cep: 'cep',
  ripImovel: 'ripImovel'
};

exports.Prisma.SipacCampusOrderByRelevanceFieldEnum = {
  nomeCampus: 'nomeCampus',
  ripImovel: 'ripImovel'
};

exports.Prisma.SipacPredioOrderByRelevanceFieldEnum = {
  subRip: 'subRip',
  denominacaoPredio: 'denominacaoPredio',
  idZona: 'idZona',
  ripImovel: 'ripImovel'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  login: 'login',
  email: 'email',
  image: 'image'
};

exports.Prisma.MagicLinkOrderByRelevanceFieldEnum = {
  id: 'id',
  code: 'code'
};

exports.Prisma.RoleOrderByRelevanceFieldEnum = {
  role: 'role',
  description: 'description'
};
exports.RequestPriority = exports.$Enums.RequestPriority = {
  LOW: 'LOW',
  NORMAL: 'NORMAL',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

exports.TimelineEventType = exports.$Enums.TimelineEventType = {
  CREATION: 'CREATION',
  COMMENT: 'COMMENT',
  STATUS_CHANGE: 'STATUS_CHANGE',
  PRIORITY_CHANGE: 'PRIORITY_CHANGE',
  ASSIGNMENT: 'ASSIGNMENT',
  UNASSIGNMENT: 'UNASSIGNMENT',
  TRANSFER_INITIATED: 'TRANSFER_INITIATED',
  SOLUTION_REGISTERED: 'SOLUTION_REGISTERED',
  MATERIAL_REQUESTED: 'MATERIAL_REQUESTED',
  MATERIAL_STATUS_CHANGED: 'MATERIAL_STATUS_CHANGED',
  DEADLINE_CHANGED: 'DEADLINE_CHANGED',
  CLOSED: 'CLOSED',
  REOPENED: 'REOPENED',
  LINKED_INFRA_OCCURRENCE: 'LINKED_INFRA_OCCURRENCE',
  UNLINKED_INFRA_OCCURRENCE: 'UNLINKED_INFRA_OCCURRENCE'
};

exports.InfrastructureOccurrenceStatus = exports.$Enums.InfrastructureOccurrenceStatus = {
  REPORTED: 'REPORTED',
  ANALYZING: 'ANALYZING',
  ACCEPTED: 'ACCEPTED',
  DISMISSED: 'DISMISSED',
  RESOLVED: 'RESOLVED'
};

exports.MaterialRequestType = exports.$Enums.MaterialRequestType = {
  NEW_MATERIALS: 'NEW_MATERIALS',
  DERIVED_MATERIALS: 'DERIVED_MATERIALS'
};

exports.MaterialRequestStatus = exports.$Enums.MaterialRequestStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  PARTIALLY_ATTENDED: 'PARTIALLY_ATTENDED',
  FULLY_ATTENDED: 'FULLY_ATTENDED',
  REJECTED: 'REJECTED',
  CANCELLED: 'CANCELLED'
};

exports.MaterialRequestItemType = exports.$Enums.MaterialRequestItemType = {
  GLOBAL_CATALOG: 'GLOBAL_CATALOG',
  DERIVED_MATERIAL: 'DERIVED_MATERIAL'
};

exports.MaterialStockOperationType = exports.$Enums.MaterialStockOperationType = {
  IN: 'IN',
  OUT: 'OUT',
  ADJUSTMENT: 'ADJUSTMENT',
  RESERVATION: 'RESERVATION'
};

exports.MaterialPickingOrderStatus = exports.$Enums.MaterialPickingOrderStatus = {
  PENDING_PREPARATION: 'PENDING_PREPARATION',
  IN_PREPARATION: 'IN_PREPARATION',
  READY_FOR_PICKUP: 'READY_FOR_PICKUP',
  PARTIALLY_WITHDRAWN: 'PARTIALLY_WITHDRAWN',
  FULLY_WITHDRAWN: 'FULLY_WITHDRAWN',
  CANCELLED: 'CANCELLED'
};

exports.MaterialTransferStatus = exports.$Enums.MaterialTransferStatus = {
  PENDING_APPROVAL: 'PENDING_APPROVAL',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  PENDING_SHIPMENT: 'PENDING_SHIPMENT',
  IN_TRANSIT: 'IN_TRANSIT',
  PARTIALLY_RECEIVED: 'PARTIALLY_RECEIVED',
  FULLY_RECEIVED: 'FULLY_RECEIVED',
  CANCELLED: 'CANCELLED'
};

exports.MaterialReceiptStatus = exports.$Enums.MaterialReceiptStatus = {
  PENDING_INSPECTION: 'PENDING_INSPECTION',
  PARTIALLY_ACCEPTED: 'PARTIALLY_ACCEPTED',
  FULLY_ACCEPTED: 'FULLY_ACCEPTED',
  REJECTED_TOTAL: 'REJECTED_TOTAL',
  CANCELLED: 'CANCELLED'
};

exports.RestrictionOperationType = exports.$Enums.RestrictionOperationType = {
  RESTRICT: 'RESTRICT',
  RELEASE_RESTRICTION: 'RELEASE_RESTRICTION'
};

exports.RestrictionOrderStatus = exports.$Enums.RestrictionOrderStatus = {
  PENDING: 'PENDING',
  EFFECTIVE: 'EFFECTIVE',
  PARTIALLY_REVERSED: 'PARTIALLY_REVERSED',
  FULLY_REVERSED: 'FULLY_REVERSED',
  CANCELLED: 'CANCELLED'
};

exports.Prisma.ModelName = {
  LogError: 'LogError',
  LogLogin: 'LogLogin',
  MaintenanceRequest: 'MaintenanceRequest',
  MaintenanceRequestStatus: 'MaintenanceRequestStatus',
  MaintenanceTimelineEvent: 'MaintenanceTimelineEvent',
  MaintenanceInstance: 'MaintenanceInstance',
  SipacServiceTypeManutencao: 'SipacServiceTypeManutencao',
  Equipment: 'Equipment',
  InfrastructureOccurrence: 'InfrastructureOccurrence',
  Warehouse: 'Warehouse',
  MaterialGlobalCatalog: 'MaterialGlobalCatalog',
  MaterialWarehouseStock: 'MaterialWarehouseStock',
  MaterialRequest: 'MaterialRequest',
  MaterialRequestItem: 'MaterialRequestItem',
  MaterialStockMovementType: 'MaterialStockMovementType',
  MaterialStockMovement: 'MaterialStockMovement',
  MaterialDerivedCondition: 'MaterialDerivedCondition',
  MaterialDerived: 'MaterialDerived',
  MaterialPickingOrder: 'MaterialPickingOrder',
  MaterialPickingOrderItem: 'MaterialPickingOrderItem',
  MaterialWithdrawal: 'MaterialWithdrawal',
  MaterialWithdrawalItem: 'MaterialWithdrawalItem',
  MaterialTransferOrder: 'MaterialTransferOrder',
  MaterialTransferOrderItem: 'MaterialTransferOrderItem',
  MaterialReceipt: 'MaterialReceipt',
  MaterialReceiptItem: 'MaterialReceiptItem',
  MaterialRestrictionOrder: 'MaterialRestrictionOrder',
  MaterialRestrictionOrderItem: 'MaterialRestrictionOrderItem',
  SipacMaterial: 'SipacMaterial',
  SipacGrupoMaterial: 'SipacGrupoMaterial',
  SipacSubGrupoMaterial: 'SipacSubGrupoMaterial',
  SipacRequisicaoMaterial: 'SipacRequisicaoMaterial',
  SipacItemRequisicaoMaterial: 'SipacItemRequisicaoMaterial',
  SipacHistoricoRequisicaoMaterial: 'SipacHistoricoRequisicaoMaterial',
  SipacTotalizacaoElementoDespesaMaterial: 'SipacTotalizacaoElementoDespesaMaterial',
  SipacDetalheAquisicaoItemMaterial: 'SipacDetalheAquisicaoItemMaterial',
  SipacRequisicaoManutencao: 'SipacRequisicaoManutencao',
  SipacInformacaoServicoManutencao: 'SipacInformacaoServicoManutencao',
  SipacHistoricoManutencao: 'SipacHistoricoManutencao',
  SipacImovel: 'SipacImovel',
  SipacImovelEndereco: 'SipacImovelEndereco',
  SipacCampus: 'SipacCampus',
  SipacPredio: 'SipacPredio',
  User: 'User',
  MagicLink: 'MagicLink',
  Role: 'Role',
  Worker: 'Worker'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
